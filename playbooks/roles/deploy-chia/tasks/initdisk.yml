- name: set hostname {{ inventory_hostname }}
  command: hostnamectl set-hostname {{ inventory_hostname }}
  become: true

- name: create data mount points
  shell: mkdir -p /media/ray/ssd && chown ray. /media/ray/ssd
  become: true
  
- name: Create list of mounted devices
  set_fact:
    mounted_devices: "{{ ansible_mounts|json_query('[].device') }}"
    mount_src_ssd: "{{ hostvars[inventory_hostname].ssd }}"
    mount_src_data1: "{{ hostvars[inventory_hostname].data1 }}"
    mount_src_data2: "{{ hostvars[inventory_hostname].data2 }}"

- name: create ext4 for ssd ({{ mount_src_ssd }}) of mounted ({{ mounted_devices }}
  community.general.filesystem:
    fstype: ext4
    dev: "{{ mount_src_ssd }}"
    # state: absent
    force: yes
  when: mount_src_ssd not in mounted_devices
  become: true
- name: Mount ssd
  mount:
    path: "{{ mount_dest_ssd }}"
    src: "{{ mount_src_ssd }}"
    fstype: ext4
    state: mounted
  when: mount_src_ssd not in mounted_devices
  become: true

- name: create ext4 for sda ({{ mount_src_data1 }})
  community.general.filesystem:
    fstype: ext4
    dev: "{{ mount_src_data1 }}"
    # state: absent
    force: yes
  become: true
  async: 600               # 10 mins
  poll: 0
  when: mount_src_data1 not in mounted_devices
- name: Mount sda - data1
  mount:
    path: "{{ mount_dest_data1 }}"
    src: "{{ mount_src_data1 }}"
    fstype: ext4
    state: mounted
  when: mount_src_data1 not in mounted_devices
  become: true

- name: create ext4 for sdb ({{ mount_src_data2 }})
  community.general.filesystem:
    fstype: ext4
    dev: "{{ mount_src_data2 }}"
    # state: absent
  become: true
  async: 600               # 10 mins
  poll: 0
  when: mount_src_data2 not in mounted_devices
- name: Mount sdb - data2
  mount:
    path: "{{ mount_dest_data2 }}"
    src: "{{ mount_src_data2 }}"
    fstype: ext4
    state: mounted
  when: mount_src_data2 not in mounted_devices
  become: true