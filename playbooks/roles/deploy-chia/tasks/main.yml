- include_tasks: init.yml
  when: ACTION == "init"

# - name: Include variables
#   include_vars: "{{ PROJ }}.yml"

# - name: "create app bin dir if not exsiting"
#   file: path={{ BASE_DIR }}/{{ PROJ }}/{{ HOST_BIN }} state=directory

# - name: "create app arti ({{ HOST_ARTI }}) dir if not exsiting"
#   file: path={{ BASE_DIR }}/{{ PROJ }}/{{ HOST_ARTI }} state=directory

# - name: "copy install-jdk-img.sh if not found"
#   copy: src=install-jdk-img.sh dest=/tmp/ mode=755 force=no

# - name: "copy .ossutilconfig if not found"
#   copy: src=.ossutilconfig dest=/root/ force=no

# - name: "copy ossutil64 if not found"
#   copy: src=ossutil64 dest=/usr/bin mode=755 force=no

# - name: "download openjdk docker image if not found locally"
#   shell: docker inspect {{ NEW_JRE_TAG }} > /dev/null 2>&1 || /tmp/install-jdk-img.sh {{ OSS_BIN }} {{ OSS_DIR }}/{{ JDK_IMG_FILE }} {{ JDK_IMG_FILE }} {{ JRE_TAG }} {{ NEW_JRE_TAG }}

# - name: "download {{ PROJ }}.tar from oss"
#   shell: "{{ OSS_BIN }} cp --update {{ OSS_TAR_DIR }}/{{ PROJ }}.tar {{ ARTI_DIR }}/{{ PROJ }}.tar"

# - name: "untar {{ ARTI_DIR }}/{{ PROJ }}.tar to {{ BASE_DIR }}/{{ PROJ }}/{{ HOST_BIN }}"
#   unarchive: 
#     src: "{{ ARTI_DIR }}/{{ PROJ }}.tar" 
#     dest: "{{ BASE_DIR }}/{{ PROJ }}/{{ HOST_ARTI }}" 
#     remote_src: yes
#     owner: root
#     mode: 755
#     group: root

- include_tasks: upgrade.yml
  when: ACTION == "up" or ACTION == "upgrade" 